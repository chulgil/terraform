apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-rollouts-dashboard
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts-dashboard
    app.kubernetes.io/component: dashboard
    environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-rollouts-dashboard
      app.kubernetes.io/component: dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-rollouts-dashboard
        app.kubernetes.io/component: dashboard
        environment: dev
    spec:
      serviceAccountName: argo-rollouts-dashboard
      containers:
        - name: argo-rollouts-dashboard
          image: quay.io/argoproj/kubectl-argo-rollouts:v1.7.2
          imagePullPolicy: Always
          command:
            - kubectl-argo-rollouts
            - dashboard
          args:
            - --insecure  # Dev 환경에서 HTTPS 비활성화
            - --port=3100
            - --root-path=/rollouts
          ports:
            - containerPort: 3100
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          livenessProbe:
            httpGet:
              path: /rollouts
              port: 3100
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /rollouts
              port: 3100
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 4
            failureThreshold: 3
          securityContext:
            runAsNonRoot: true
            runAsUser: 999
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env:
            - name: ARGO_ROLLOUTS_DASHBOARD_BASE_URL
              value: "/rollouts"
            - name: ARGO_ROLLOUTS_DASHBOARD_ROOT_PATH  
              value: "/rollouts"

---
apiVersion: v1
kind: Service
metadata:
  name: argo-rollouts-dashboard
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts-dashboard
    app.kubernetes.io/component: dashboard
    environment: dev
spec:
  type: ClusterIP
  ports:
    - port: 3100
      targetPort: 3100
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: argo-rollouts-dashboard
    app.kubernetes.io/component: dashboard

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-rollouts-dashboard
  namespace: argo-rollouts
  labels:
    app.kubernetes.io/name: argo-rollouts-dashboard
    app.kubernetes.io/component: dashboard
    environment: dev

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-rollouts-dashboard
  labels:
    app.kubernetes.io/name: argo-rollouts-dashboard
    app.kubernetes.io/component: dashboard
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - rollouts/status
      - experiments
      - analysistemplates
      - analysisruns
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - replicasets
      - deployments
    verbs:
      - get
      - list
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argo-rollouts-dashboard
  labels:
    app.kubernetes.io/name: argo-rollouts-dashboard
    app.kubernetes.io/component: dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts-dashboard
subjects:
  - kind: ServiceAccount
    name: argo-rollouts-dashboard
    namespace: argo-rollouts 