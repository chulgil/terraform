[2025-07-18 18:00:21] Validating environment: dev
[2025-07-18 18:00:22] Starting deployment to dev environment...
[2025-07-18 18:00:22] Log file: /Users/r00360/Dev/devops/terraform/terraform-codes/logs/deploy_dev_20250718_180021.log
[2025-07-18 18:00:22] Starting Terraform Init...
[2025-07-18 18:00:22] Terraform Init: [0m[1mInitializing the backend...[0m
[2025-07-18 18:00:22] Terraform Init: [0m[1mInitializing modules...[0m
[2025-07-18 18:00:22] Terraform Init: [0m[1mInitializing provider plugins...[0m
[2025-07-18 18:00:22] Terraform Init: - Reusing previous version of hashicorp/aws from the dependency lock file
[2025-07-18 18:00:22] Terraform Init: - Reusing previous version of hashicorp/null from the dependency lock file
[2025-07-18 18:00:22] Terraform Init: - Reusing previous version of hashicorp/kubernetes from the dependency lock file
[2025-07-18 18:00:22] Terraform Init: - Using previously-installed hashicorp/aws v6.4.0
[2025-07-18 18:00:22] Terraform Init: - Using previously-installed hashicorp/null v3.2.4
[2025-07-18 18:00:22] Terraform Init: - Using previously-installed hashicorp/kubernetes v2.37.1
[2025-07-18 18:00:22] Terraform Init: 
[2025-07-18 18:00:22] Terraform Init: [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[2025-07-18 18:00:22] Terraform Init: [0m[32m
[2025-07-18 18:00:22] Terraform Init: You may now begin working with Terraform. Try running "terraform plan" to see
[2025-07-18 18:00:22] Terraform Init: any changes that are required for your infrastructure. All Terraform commands
[2025-07-18 18:00:22] Terraform Init: should now work.
[2025-07-18 18:00:22] Terraform Init: 
[2025-07-18 18:00:22] Terraform Init: If you ever set or change modules or backend configuration for Terraform,
[2025-07-18 18:00:22] Terraform Init: rerun this command to reinitialize your working directory. If you forget, other
[2025-07-18 18:00:22] Terraform Init: commands will detect it and remind you to do so if necessary.[0m
[2025-07-18 18:00:22] Terraform Init completed with status: 0
[2025-07-18 18:00:23] Terraform Init completed successfully.
[2025-07-18 18:00:23] Running terraform plan...
[0m[1mmodule.eks.aws_iam_role.cluster: Refreshing state... [id=dev-eks-cluster-cluster-role][0m
[0m[1mmodule.eks.aws_iam_role.node: Refreshing state... [id=dev-eks-cluster-node-role][0m
[0m[1mmodule.vpc.aws_vpc.main: Refreshing state... [id=vpc-0aca504451b3bcb73][0m
[0m[1mmodule.iam.aws_iam_role.cluster: Refreshing state... [id=dev-eks-cluster-role][0m
[0m[1mmodule.iam.aws_iam_role.node: Refreshing state... [id=dev-eks-node-group-role][0m
[0m[1mmodule.vpc.aws_internet_gateway.main: Refreshing state... [id=igw-0e6079eeb53e6a4db][0m
[0m[1mmodule.vpc.aws_subnet.private[1]: Refreshing state... [id=subnet-0b06fe07e25a611e6][0m
[0m[1mmodule.vpc.aws_subnet.public[1]: Refreshing state... [id=subnet-01d2b1941ef3201b0][0m
[0m[1mmodule.vpc.aws_subnet.private[0]: Refreshing state... [id=subnet-08ebae8b7dc47213b][0m
[0m[1mmodule.vpc.aws_subnet.public[0]: Refreshing state... [id=subnet-0d7244348a72d51bc][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Refreshing state... [id=dev-eks-cluster-cluster-role/arn:aws:iam::aws:policy/AmazonEKSClusterPolicy][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy: Refreshing state... [id=dev-eks-cluster-cluster-role/arn:aws:iam::aws:policy/AmazonEKSServicePolicy][0m
[0m[1mmodule.iam.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Refreshing state... [id=dev-eks-node-group-role/arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly][0m
[0m[1mmodule.iam.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Refreshing state... [id=dev-eks-node-group-role/arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy][0m
[0m[1mmodule.iam.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Refreshing state... [id=dev-eks-node-group-role/arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_AmazonEKSWorkerNodePolicy: Refreshing state... [id=dev-eks-cluster-node-role/arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_AmazonEKS_CNI_Policy: Refreshing state... [id=dev-eks-cluster-node-role/arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy][0m
[0m[1mmodule.eks.aws_iam_role_policy_attachment.node_AmazonEC2ContainerRegistryReadOnly: Refreshing state... [id=dev-eks-cluster-node-role/arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly][0m
[0m[1mmodule.iam.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy: Refreshing state... [id=dev-eks-cluster-role/arn:aws:iam::aws:policy/AmazonEKSServicePolicy][0m
[0m[1mmodule.iam.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy: Refreshing state... [id=dev-eks-cluster-role/arn:aws:iam::aws:policy/AmazonEKSClusterPolicy][0m
[0m[1mmodule.eks.aws_eks_cluster.main: Refreshing state... [id=dev-eks-cluster][0m
[0m[1mmodule.eks.data.aws_eks_cluster_auth.main: Reading...[0m[0m
[0m[1mmodule.eks.data.aws_eks_cluster_auth.main: Read complete after 0s [id=dev-eks-cluster][0m
[0m[1mmodule.eks.aws_eks_node_group.node_group: Refreshing state... [id=dev-eks-cluster:dev-eks-cluster-node-group][0m

[1m[36mNote:[0m[1m Objects have changed outside of Terraform
[0m
Terraform detected the following changes made outside of Terraform since the
last "terraform apply" which may have affected this plan:

[1m  # module.eks.aws_eks_node_group.node_group[0m has changed
[0m  [33m~[0m[0m resource "aws_eks_node_group" "node_group" {
      [32m+[0m[0m arn             = "arn:aws:eks:ap-northeast-2:421114334882:nodegroup/dev-eks-cluster/dev-eks-cluster-node-group/10cc0e3f-5497-3474-e930-2eb9ef227bd9"
        id              = "dev-eks-cluster:dev-eks-cluster-node-group"
        tags            = {
            "Environment"                               = "dev"
            "Project"                                   = "eks-cluster"
            "Terraform"                                 = "true"
            "k8s.io/cluster-autoscaler/dev-eks-cluster" = "owned"
            "k8s.io/cluster-autoscaler/enabled"         = "true"
            "kubernetes.io/cluster/dev-eks-cluster"     = "owned"
        }
        [90m# (10 unchanged attributes hidden)[0m[0m

        [90m# (2 unchanged blocks hidden)[0m[0m
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
[32m+[0m/[31m-[0m create replacement and then destroy[0m

Terraform will perform the following actions:

[1m  # module.eks.aws_eks_node_group.node_group[0m is tainted, so must be [1m[31mreplaced[0m
[0m[32m+[0m/[31m-[0m[0m resource "aws_eks_node_group" "node_group" {
      [33m~[0m[0m arn                    = "arn:aws:eks:ap-northeast-2:421114334882:nodegroup/dev-eks-cluster/dev-eks-cluster-node-group/10cc0e3f-5497-3474-e930-2eb9ef227bd9" -> (known after apply)
      [33m~[0m[0m id                     = "dev-eks-cluster:dev-eks-cluster-node-group" -> (known after apply)
      [31m-[0m[0m labels                 = {} [90m-> null[0m[0m
      [32m+[0m[0m node_group_name_prefix = (known after apply)
      [33m~[0m[0m release_version        = "1.33.0-20250715" -> (known after apply)
      [33m~[0m[0m resources              = [
          [31m-[0m[0m {
              [31m-[0m[0m autoscaling_groups              = [
                  [31m-[0m[0m {
                      [31m-[0m[0m name = "eks-dev-eks-cluster-node-group-10cc0e3f-5497-3474-e930-2eb9ef227bd9"
                    },
                ]
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ] -> (known after apply)
      [33m~[0m[0m status                 = "CREATE_FAILED" -> (known after apply)
      [33m~[0m[0m tags                   = {
            "Environment"                               = "dev"
            "Project"                                   = "eks-cluster"
            "Terraform"                                 = "true"
            "k8s.io/cluster-autoscaler/dev-eks-cluster" = "owned"
            "k8s.io/cluster-autoscaler/enabled"         = "true"
          [32m+[0m[0m "k8s.io/cluster/dev-eks-cluster"            = "owned"
            "kubernetes.io/cluster/dev-eks-cluster"     = "owned"
        }
      [33m~[0m[0m tags_all               = {
          [32m+[0m[0m "k8s.io/cluster/dev-eks-cluster"            = "owned"
            [90m# (6 unchanged elements hidden)[0m[0m
        }
      [33m~[0m[0m version                = "1.33" -> (known after apply)
        [90m# (9 unchanged attributes hidden)[0m[0m

      [32m+[0m[0m launch_template {
          [32m+[0m[0m id      = (known after apply)
          [32m+[0m[0m name    = (known after apply)
          [32m+[0m[0m version = "$Latest"
        }

      [33m~[0m[0m node_repair_config (known after apply)

      [33m~[0m[0m update_config {
          [31m-[0m[0m max_unavailable_percentage = 0 [90m-> null[0m[0m
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # module.eks.aws_iam_role_policy_attachment.node_AmazonEC2RoleforSSM[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonEC2RoleforSSM" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
      [32m+[0m[0m role       = "dev-eks-cluster-node-role"
    }

[1m  # module.eks.aws_iam_role_policy_attachment.node_AmazonSSMManagedInstanceCore[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "node_AmazonSSMManagedInstanceCore" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      [32m+[0m[0m role       = "dev-eks-cluster-node-role"
    }

[1m  # module.eks.aws_launch_template.eks_nodes[0m will be created
[0m  [32m+[0m[0m resource "aws_launch_template" "eks_nodes" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m default_version = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m instance_type   = "t3.medium"
      [32m+[0m[0m latest_version  = (known after apply)
      [32m+[0m[0m name            = (known after apply)
      [32m+[0m[0m name_prefix     = "dev-eks-cluster-nodes-"
      [32m+[0m[0m region          = "ap-northeast-2"
      [32m+[0m[0m tags_all        = (known after apply)
      [32m+[0m[0m user_data       = "IyEvYmluL2Jhc2gKc2V0IC1vIHh0cmFjZQovZXRjL2Vrcy9ib290c3RyYXAuc2ggZGV2LWVrcy1jbHVzdGVyIFwKICAtLWt1YmVsZXQtZXh0cmEtYXJncyAnLS1ub2RlLWxhYmVscz1ub2RlZ3JvdXAtdHlwZT1zdGFuZGFyZCxlbnZpcm9ubWVudD1kZXYnIFwKICAtLXVzZS1tYXgtcG9kcyBmYWxzZSBcCiAgLS1jb250YWluZXItcnVudGltZSBjb250YWluZXJkIFwKICAtLWRucy1jbHVzdGVyLWlwIDE3Mi4yMC4wLjEwCg=="
        [90m# (2 unchanged attributes hidden)[0m[0m

      [32m+[0m[0m block_device_mappings {
          [32m+[0m[0m device_name = "/dev/xvda"

          [32m+[0m[0m ebs {
              [32m+[0m[0m delete_on_termination      = "true"
              [32m+[0m[0m encrypted                  = "true"
              [32m+[0m[0m iops                       = (known after apply)
              [32m+[0m[0m throughput                 = (known after apply)
              [32m+[0m[0m volume_initialization_rate = (known after apply)
              [32m+[0m[0m volume_size                = 20
              [32m+[0m[0m volume_type                = "gp3"
            }
        }

      [32m+[0m[0m metadata_options {
          [32m+[0m[0m http_endpoint               = "enabled"
          [32m+[0m[0m http_protocol_ipv6          = (known after apply)
          [32m+[0m[0m http_put_response_hop_limit = 2
          [32m+[0m[0m http_tokens                 = "required"
          [32m+[0m[0m instance_metadata_tags      = "enabled"
        }

      [32m+[0m[0m monitoring {
          [32m+[0m[0m enabled = true
        }

      [32m+[0m[0m tag_specifications {
          [32m+[0m[0m resource_type = "instance"
          [32m+[0m[0m tags          = {
              [32m+[0m[0m "Environment"                           = "dev"
              [32m+[0m[0m "Name"                                  = "dev-eks-cluster-node"
              [32m+[0m[0m "Project"                               = "eks-cluster"
              [32m+[0m[0m "Terraform"                             = "true"
              [32m+[0m[0m "kubernetes.io/cluster/dev-eks-cluster" = "shared"
            }
        }
    }

[1m  # module.eks.null_resource.validate_ami_id[0][0m will be created
[0m  [32m+[0m[0m resource "null_resource" "validate_ami_id" {
      [32m+[0m[0m id = (known after apply)
    }

[1mPlan:[0m 5 to add, 0 to change, 1 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m node_group_arn            = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Saved the plan to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"
[2025-07-18 18:00:28] Starting Terraform Apply...
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.null_resource.validate_ami_id[0]: Creating...[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.null_resource.validate_ami_id[0]: Provisioning with 'local-exec'...[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.null_resource.validate_ami_id[0] (local-exec):[0m [0mExecuting: ["/bin/sh" "-c" "echo \"ERROR: No AMI ID provided. Please set the 'ami_id' variable in your terraform.tfvars file.\"\necho \"For Kubernetes 1.33, you need to provide a custom AMI ID as this version is not officially supported by AWS EKS.\"\nexit 1\n"]
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.null_resource.validate_ami_id[0] (local-exec):[0m [0mERROR: No AMI ID provided. Please set the 'ami_id' variable in your terraform.tfvars file.
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.null_resource.validate_ami_id[0] (local-exec):[0m [0mFor Kubernetes 1.33, you need to provide a custom AMI ID as this version is not officially supported by AWS EKS.
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.aws_iam_role_policy_attachment.node_AmazonEC2RoleforSSM: Creating...[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.aws_iam_role_policy_attachment.node_AmazonSSMManagedInstanceCore: Creating...[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.aws_launch_template.eks_nodes: Creating...[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.aws_iam_role_policy_attachment.node_AmazonSSMManagedInstanceCore: Creation complete after 1s [id=dev-eks-cluster-node-role/arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore][0m
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.aws_iam_role_policy_attachment.node_AmazonEC2RoleforSSM: Creation complete after 1s [id=dev-eks-cluster-node-role/arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM][0m
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.aws_launch_template.eks_nodes: Creation complete after 6s [id=lt-086966c39ed0448a0][0m
[2025-07-18 18:00:28] Terraform Apply: [0m[1mmodule.eks.aws_eks_node_group.node_group: Creating...[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ•·[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mlocal-exec provisioner error[0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m[0m  with module.eks.null_resource.validate_ami_id[0],
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m  on ../../modules/eks/launch_template.tf line 57, in resource "null_resource" "validate_ami_id":
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m  57:   provisioner "local-exec" [4m{[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0mError running command 'echo "ERROR: No AMI ID provided. Please set the
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m'ami_id' variable in your terraform.tfvars file."
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0mecho "For Kubernetes 1.33, you need to provide a custom AMI ID as this
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0mversion is not officially supported by AWS EKS."
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0mexit 1
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m': exit status 1. Output: ERROR: No AMI ID provided. Please set the
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m'ami_id' variable in your terraform.tfvars file.
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0mFor Kubernetes 1.33, you need to provide a custom AMI ID as this version is
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0mnot officially supported by AWS EKS.
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ•µ[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ•·[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mcreating EKS Node Group (dev-eks-cluster:dev-eks-cluster-node-group): operation error EKS: CreateNodegroup, https response error StatusCode: 409, RequestID: 864cdea3-0bbb-44a6-b974-87968b48fac1, ResourceInUseException: NodeGroup already exists with name dev-eks-cluster-node-group and cluster name dev-eks-cluster[0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m[0m  with module.eks.aws_eks_node_group.node_group,
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m  on ../../modules/eks/main.tf line 35, in resource "aws_eks_node_group" "node_group":
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m  35: resource "aws_eks_node_group" "node_group" [4m{[0m[0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ”‚[0m [0m
[2025-07-18 18:00:28] Terraform Apply: [31mâ•µ[0m[0m
[2025-07-18 18:00:28] Terraform Apply completed with status: 0
[2025-07-18 18:00:36] Terraform Apply completed successfully.
[2025-07-18 18:00:36] Updating kubeconfig...
Added new context dev to /Users/r00360/.kube/config_dev
[2025-07-18 18:00:38] Deployment completed successfully!
[2025-07-18 18:00:38] Full deployment log: /Users/r00360/Dev/devops/terraform/terraform-codes/logs/deploy_dev_20250718_180021.log
